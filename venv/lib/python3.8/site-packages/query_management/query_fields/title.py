def generate_title(query_title):
  splitTitle = query_title.replace('-', '').split(" ")
  
  dismax_title = {"dis_max": {"queries": []}}

  title_exactMatch = {
      "script_score": {
          "query": {"match": {"providerData.title.keyword": {"query": query_title}}},
          "script": {"source": "_score*50"},
      },
  }

  title_exactMatchWithSynonym = {
      "script_score": {
          "query": {
              "simple_query_string": {
                  "query": "\"" + query_title + "\"",
                  "fields": ["providerData.title"],
                  "default_operator": "AND",
              },
          },
          "script": {
              "source":
              "double real_score = _score > doc['providerData.title.length'].value ? doc['providerData.title.length'].value : _score;50*((real_score/doc['providerData.title.length'].value)*doc['providerData.title.length'].value)/(((1-(real_score/doc['providerData.title.length'].value))*doc['providerData.title.length'].value)+" +
              str(len(splitTitle)) +
              ")",
          },
      },
  }

  title_matchPhrase = {
      "script_score": {
          "query": {"span_near": {"clauses": [], "slop": 0, "in_order": True}},
          "script": {
              "source":
              "double real_score = _score > doc['providerData.title.length'].value ? doc['providerData.title.length'].value : _score;40*((real_score/doc['providerData.title.length'].value)*doc['providerData.title.length'].value)/(((1-(real_score/doc['providerData.title.length'].value))*doc['providerData.title.length'].value)+" +
              str(len(splitTitle)) +
              ")",
          },
      },
  }
  titleFuzzy1String = ""
  titleFuzzyString = ""

  for title in splitTitle:
      title_matchPhrase["script_score"]["query"]["span_near"]["clauses"].append({
          "span_multi": {"match": {"fuzzy": {"providerData.title": title}}},
      })
      titleFuzzy1String = titleFuzzy1String + title + "~1 "
      titleFuzzyString = titleFuzzyString + title + "~ "

  title_ORFuzzy1 = {
      "script_score": {
          "query": {
              "simple_query_string": {
                  "query": titleFuzzy1String,
                  "fields": ["providerData.title"],
                  "default_operator": "OR",
              },
          },
          "script": {
              "source":
              "double real_score = _score > doc['providerData.title.length'].value ? doc['providerData.title.length'].value : _score;15*((real_score/doc['providerData.title.length'].value)*doc['providerData.title.length'].value)/(((1-(real_score/doc['providerData.title.length'].value))*doc['providerData.title.length'].value)+" +
              str(len(splitTitle)) +
              ")",
          },
      },
  }
  title_ORFuzzy = {
      "script_score": {
          "query": {
              "simple_query_string": {
                  "query": titleFuzzyString,
                  "fields": ["providerData.title"],
                  "default_operator": "OR",
              },
          },
          "script": {
              "source":
              "double real_score = _score > doc['providerData.title.length'].value ? doc['providerData.title.length'].value : _score;10*((real_score/doc['providerData.title.length'].value)*doc['providerData.title.length'].value)/(((1-(real_score/doc['providerData.title.length'].value))*doc['providerData.title.length'].value)+" +
              str(len(splitTitle)) +
              ")",
          },
      },
  }

  dismax_title["dis_max"]["queries"].append(title_exactMatch)
  dismax_title["dis_max"]["queries"].append(title_exactMatchWithSynonym)
  dismax_title["dis_max"]["queries"].append(title_matchPhrase)
  dismax_title["dis_max"]["queries"].append(title_ORFuzzy1)
  dismax_title["dis_max"]["queries"].append(title_ORFuzzy)

  return dismax_title
